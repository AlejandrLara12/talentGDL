/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 9);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

let allCat;


let colors;
let colorsFiltered;

// allColorsOptions
// colorsAvailabe

let cat;
// let catFiltered = [
//   {
//     model: "1",
//     colors: ['1','2','3'],
//     precios: ['100.00', '150.00', '200.00']
//   },
//   {
//     model: "2",
//     colors: ['1','2'],
//     precios: ['100.00', '150.00']
//   },
//   {
//     model: "3",
//     colors: ['1'],
//     precios: ['100.00']
//   },
//   {
//     model: "4",
//     colors: ['3'],
//     precios: ['150']
//   }
// ];
let catFiltered = [];

let models;
let modelsFiltered = [];

let modelChecked = undefined;
let colorChecked = undefined;

let tallaSelected = undefined;
// allModelsOptions
// modelsAvailabe

module.exports = {
  catFiltered,
  colors,
  colorsFiltered,
  colorChecked,
  models,
  modelsFiltered,
  modelChecked,
  tallaSelected
}

/***/ }),
/* 1 */
/***/ (function(module, exports) {

//  Add smooth transition on changing links
module.exports = {
  smoothScrollTo
};

  $('.nav-item').on('click', function() {
    $('.nav-item').removeClass('active');
    $(this).addClass('active');
  });

 $('a[href^="#_"]').on('click', function(event) {
   //alert('on smooth');
   var target = $( $(this).attr('href') );      
   var dist = target.offset().top - 100;

   if(target.length) {
     event.preventDefault();
     $('html, body').animate({
       scrollTop: dist
     }, 500);
   }
   // $('#menuBtn').addClass('collapse');
   $('#navbarSupportedContent').removeClass('show');
 });

 function smoothScrollTo(element, targetName){
  var target;
  switch (element) {
    case 'section':
      target = $(`section[id^="${targetName}"]`);
      break;
    case 'a':
      target = $(`a[href^="${targetName}"]`);
      break;
  
    default:
      break;
  }
   let dist = target.offset().top - 100;
   let time = (dist + 100.0) / (250.0/150.0);
  //  console.log('######### DIST >' ,dist);
  //  console.log('######### TIME >' ,time);
   if(target.length) {
     event.preventDefault();
     $('html, body').animate({
       scrollTop: dist
     }, time);
   }
 }

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = {
  renderFilteredColors,
  clearCheckedColor,
  resetColors,
  colorTest
};

let swal =  __webpack_require__(4);
let userGlobal = __webpack_require__(0);
let userPreview = __webpack_require__(3);
let scroll = __webpack_require__(1);

  /* color option css */
  $('.color-option').on('click',function(event) {
    event.preventDefault();
    // $('.color-option>.view>.mask>i').removeClass('fa-check');
    clearCheckedColor();
    userGlobal.colorChecked = undefined;

    console.log('global.modelchecked ', userGlobal.modelChecked );
    if(userGlobal.modelChecked){
      $(this).find('i').addClass('fa-check');
      $(this).addClass('color-checked');
      userGlobal.colorChecked = $(this).data();
      userPreview.hidePreviewMsg();
      userPreview.createPreview();
      scroll.smoothScrollTo('section', '_user_preview');
    } else {
      swal({
        title: "Ups",
        text: 'Seleccione un modelo', //res.errorMsg
        icon: "error"
      });
    }
  });

  function clearCheckedColor() {
    // $('.color-option>.view>.mask>i').removeClass('fa-check');
    userGlobal.colorChecked = undefined;
    $('.color-option').find('i').removeClass('fa-check');
    $('.color-option').removeClass('color-checked');
  }


  function renderFilteredColors(modelChecked) { // filtered/available colors for a selected Model

    // modelChecked = $(modelChecked[0]).data();
    // console.log('model-checked.data(): ', modelChecked);
    $('#color-container-message').addClass('d-none');

    // if models exist for certain size
    if( userGlobal.catFiltered ){
      
      for( let j = 0; j < userGlobal.catFiltered.length; j++){
        // console.log(`catFiltered[${j}] ${userGlobal.catFiltered[j].model} == modelChecked.cardModelId ${modelChecked.cardModelId}` );
        if(userGlobal.catFiltered[j].model == modelChecked.cardModelId ){
          userGlobal.colorsFiltered = userGlobal.catFiltered[j].colors;
          break;
        }
        // console.log('global models loop', userGlobal.catFiltered[i]);
      }

      let colorsObj = $('.color-option');
      // console.log( 'colorsObj:', colorsObj);  
      // console.log( 'colorsFiltered:', userGlobal.colorsFiltered);
      // loop through colorsObject
      for( let i = 0; i < colorsObj.length ; i++ ){
        // console.log('colorsObj[i]', colorsObj[i]); console.log('$(color).data()', $(color).data());
        let color = colorsObj[i]; // color option
        let colorData = $(color).data() ; // colorId colorName
        // console.log( `color: ${colorData.colorId} is in ${userGlobal.colorsFiltered}: ${colorData.colorName}`);  

        if( $.inArray( String(colorData.colorId), userGlobal.colorsFiltered) > -1){
          $(color).removeClass('d-none');
        } else {
          // color option is not available for that model
          $(color).addClass('d-none');
        }

      }
      

    } else {
      // userGlobal.modelsFitered does not exist, ask user to select a size and uncheck the model
      swal({
        title: "Ups",
        text: 'Seleccione una talla', // res.errorMsg
        icon: "error"
      });
    }
    
  } //  /renderFilteredColors()

  function resetColors() {
    // description Shows all colors availabe in the DOM
    console.log('resetColors called');
    $('.color-option').removeClass('d-none');
  } //  /resetColors()

  function colorTest() {
    console.log('colorTest called');
  } //  /resetColors()



/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = {
  createPreview,
  hidePreview,
  updateSubtotal,
  showPreviewMsg,
  hidePreviewMsg,
};

let userGlobal = __webpack_require__(0);
let userColors = __webpack_require__(2);
let userCarrito = __webpack_require__(8);
let userModels = __webpack_require__(5);
let scroll = __webpack_require__(1);


$('#user_prev_addPair').click(function() {
  changePairs('add');
});

$('#user_prev_subsPair').click(function() {
  changePairs('sub');
});

$('#user_prev_btnAddCard').click(function() {
  // console.log('userCarrito in preview', userCarrito);
  userCarrito.addItemToCard();
  userModels.clearCheckedModel(); 
  userColors.clearCheckedColor();
  scroll.smoothScrollTo('section','_carrito');

  showPreviewMsg('* Seleccionar un modelo<br>* Seleccionar un color');

});


$('#user_prev_btnCancel').click(function() {
  // console.log('userColors in preview', userColors);
  swal({
    title: "Â¿Deseas cancelar?",
    text: "Se borraran los datos en pantalla",
    icon: "warning",
    buttons: true,
    dangerMode: true,
  })
  .then((willDelete) => {
    if (willDelete) {
      userColors.clearCheckedColor();
      hidePreview();
      showPreviewMsg('* Seleccionar un modelo<br>* Seleccionar un color');
    }
  });
});



function changePairs(op) {
  let pairs = $('#user_prev_pares');
  let pairsCuantity = parseInt(pairs.val());

  
  if(op == 'add'){
    if(pairsCuantity < 10){
      pairs.val( pairsCuantity + 1 );
    }
  } else if ( op == 'sub'){
    if( pairsCuantity > 1){
      pairs.val( pairsCuantity - 1 );
    }
  } else {
    alert('not availabe option [add, sub]');
  }
  
  updateSubtotal();
}



function updateSubtotal() {
  // console.log('price', price); console.log('pairs', pairs);
  let price = $('#user_prev_precio').text();
  price = parseFloat(price);
  let pairs = parseInt($('#user_prev_pares').val());
  $('#user_prev_subtotal').text( parseFloat(price * pairs).toFixed(2) );
}


function createPreview() {
  console.log('creating preview');
  $('#user_prev_pares').val('1'); // resets the cantidad Pares
  let previewTalla = $('#user_talla option:selected').text();
  let previewTallaId = $('#user_talla option:selected').val();
  let previewModel = userGlobal.modelChecked;
  let previewColor = userGlobal.colorChecked;
  let previewPrecio;

  let modelSelected = userGlobal.catFiltered.filter(function(mod) {
    return mod.model == previewModel.cardModelId;
  })[0];

  previewPrecio = modelSelected.precios[modelSelected.colors.indexOf( String(previewColor.colorId) )];
  
  // console.log('catFiltered', userGlobal.catFiltered);
  // console.log('modelSelected', modelSelected);
  // console.log('previewTalla', previewTalla);
  // console.log('previewModel', previewModel);
  // console.log('previewColor', previewColor);
  // console.log('precios index', modelSelected.colors.indexOf( String(previewColor.colorId) ));
  // console.log('previewPrecio', previewPrecio);
  
  // console.log('modelCode', previewModel.cardModelCode);
  // console.log('colorCode', previewColor.colorCode);
  
  $('#user_prev_img').attr('src', 'material/cat_model/' + previewModel.cardModelCode.toLowerCase() + '-' + previewColor.colorCode.toLowerCase() + '.jpg');
  $('#user_prev_model').text(previewModel.cardModelName);
  $('#user_prev_color').text(previewColor.colorName);
  $('#user_prev_talla').text(previewTalla);
  $('#user_prev_precio').text(previewPrecio);
  // $('#user_prev_').text(preview);
  updateSubtotal();

  // $('#user_prev_card').removeClass('d-none');
  renderPreview();
} // .createPreview();

function renderPreview() {
  // $('#user_prev_card').addClass('d-none');
  $('#user_prev_card').removeClass('d-none');
  $('#user_prev_btns').removeClass('d-none');
}

function hidePreview() {
  // $('#user_prev_card').addClass('d-none');
  $('#user_prev_card').addClass('d-none');
  $('#user_prev_btns').addClass('d-none');
  // userColors.clearCheckedColor();
  // userModels.resetModels(); 
}

function showPreviewMsg(msg) {
  $('#preview-container-message').find('p').removeClass('d-none');
  $('#preview-container-message').find('p').html(msg);
}

function hidePreviewMsg() {
  $('#preview-container-message').find('p').addClass('d-none');
  $('#preview-container-message').find('p').text('Message goes here');
}

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {!function(t,e){ true?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.swal=e():t.swal=e()}(this,function(){return function(t){function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=8)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o="swal-button";e.CLASS_NAMES={MODAL:"swal-modal",OVERLAY:"swal-overlay",SHOW_MODAL:"swal-overlay--show-modal",MODAL_TITLE:"swal-title",MODAL_TEXT:"swal-text",ICON:"swal-icon",ICON_CUSTOM:"swal-icon--custom",CONTENT:"swal-content",FOOTER:"swal-footer",BUTTON_CONTAINER:"swal-button-container",BUTTON:o,CONFIRM_BUTTON:o+"--confirm",CANCEL_BUTTON:o+"--cancel",DANGER_BUTTON:o+"--danger",BUTTON_LOADING:o+"--loading",BUTTON_LOADER:o+"__loader"},e.default=e.CLASS_NAMES},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getNode=function(t){var e="."+t;return document.querySelector(e)},e.stringToNode=function(t){var e=document.createElement("div");return e.innerHTML=t.trim(),e.firstChild},e.insertAfter=function(t,e){var n=e.nextSibling;e.parentNode.insertBefore(t,n)},e.removeNode=function(t){t.parentElement.removeChild(t)},e.throwErr=function(t){throw t=t.replace(/ +(?= )/g,""),"SweetAlert: "+(t=t.trim())},e.isPlainObject=function(t){if("[object Object]"!==Object.prototype.toString.call(t))return!1;var e=Object.getPrototypeOf(t);return null===e||e===Object.prototype},e.ordinalSuffixOf=function(t){var e=t%10,n=t%100;return 1===e&&11!==n?t+"st":2===e&&12!==n?t+"nd":3===e&&13!==n?t+"rd":t+"th"}},function(t,e,n){"use strict";function o(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}Object.defineProperty(e,"__esModule",{value:!0}),o(n(25));var r=n(26);e.overlayMarkup=r.default,o(n(27)),o(n(28)),o(n(29));var i=n(0),a=i.default.MODAL_TITLE,s=i.default.MODAL_TEXT,c=i.default.ICON,l=i.default.FOOTER;e.iconMarkup='\n  <div class="'+c+'"></div>',e.titleMarkup='\n  <div class="'+a+'"></div>\n',e.textMarkup='\n  <div class="'+s+'"></div>',e.footerMarkup='\n  <div class="'+l+'"></div>\n'},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1);e.CONFIRM_KEY="confirm",e.CANCEL_KEY="cancel";var r={visible:!0,text:null,value:null,className:"",closeModal:!0},i=Object.assign({},r,{visible:!1,text:"Cancel",value:null}),a=Object.assign({},r,{text:"OK",value:!0});e.defaultButtonList={cancel:i,confirm:a};var s=function(t){switch(t){case e.CONFIRM_KEY:return a;case e.CANCEL_KEY:return i;default:var n=t.charAt(0).toUpperCase()+t.slice(1);return Object.assign({},r,{text:n,value:t})}},c=function(t,e){var n=s(t);return!0===e?Object.assign({},n,{visible:!0}):"string"==typeof e?Object.assign({},n,{visible:!0,text:e}):o.isPlainObject(e)?Object.assign({visible:!0},n,e):Object.assign({},n,{visible:!1})},l=function(t){for(var e={},n=0,o=Object.keys(t);n<o.length;n++){var r=o[n],a=t[r],s=c(r,a);e[r]=s}return e.cancel||(e.cancel=i),e},u=function(t){var n={};switch(t.length){case 1:n[e.CANCEL_KEY]=Object.assign({},i,{visible:!1});break;case 2:n[e.CANCEL_KEY]=c(e.CANCEL_KEY,t[0]),n[e.CONFIRM_KEY]=c(e.CONFIRM_KEY,t[1]);break;default:o.throwErr("Invalid number of 'buttons' in array ("+t.length+").\n      If you want more than 2 buttons, you need to use an object!")}return n};e.getButtonListOpts=function(t){var n=e.defaultButtonList;return"string"==typeof t?n[e.CONFIRM_KEY]=c(e.CONFIRM_KEY,t):Array.isArray(t)?n=u(t):o.isPlainObject(t)?n=l(t):!0===t?n=u([!0,!0]):!1===t?n=u([!1,!1]):void 0===t&&(n=e.defaultButtonList),n}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(2),i=n(0),a=i.default.MODAL,s=i.default.OVERLAY,c=n(30),l=n(31),u=n(32),f=n(33);e.injectElIntoModal=function(t){var e=o.getNode(a),n=o.stringToNode(t);return e.appendChild(n),n};var d=function(t){t.className=a,t.textContent=""},p=function(t,e){d(t);var n=e.className;n&&t.classList.add(n)};e.initModalContent=function(t){var e=o.getNode(a);p(e,t),c.default(t.icon),l.initTitle(t.title),l.initText(t.text),f.default(t.content),u.default(t.buttons,t.dangerMode)};var m=function(){var t=o.getNode(s),e=o.stringToNode(r.modalMarkup);t.appendChild(e)};e.default=m},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(3),r={isOpen:!1,promise:null,actions:{},timer:null},i=Object.assign({},r);e.resetState=function(){i=Object.assign({},r)},e.setActionValue=function(t){if("string"==typeof t)return a(o.CONFIRM_KEY,t);for(var e in t)a(e,t[e])};var a=function(t,e){i.actions[t]||(i.actions[t]={}),Object.assign(i.actions[t],{value:e})};e.setActionOptionsFor=function(t,e){var n=(void 0===e?{}:e).closeModal,o=void 0===n||n;Object.assign(i.actions[t],{closeModal:o})},e.default=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(3),i=n(0),a=i.default.OVERLAY,s=i.default.SHOW_MODAL,c=i.default.BUTTON,l=i.default.BUTTON_LOADING,u=n(5);e.openModal=function(){o.getNode(a).classList.add(s),u.default.isOpen=!0};var f=function(){o.getNode(a).classList.remove(s),u.default.isOpen=!1};e.onAction=function(t){void 0===t&&(t=r.CANCEL_KEY);var e=u.default.actions[t],n=e.value;if(!1===e.closeModal){var i=c+"--"+t;o.getNode(i).classList.add(l)}else f();u.default.promise.resolve(n)},e.getState=function(){var t=Object.assign({},u.default);return delete t.promise,delete t.timer,t},e.stopLoading=function(){for(var t=document.querySelectorAll("."+c),e=0;e<t.length;e++){t[e].classList.remove(l)}}},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){(function(e){t.exports=e.sweetAlert=n(9)}).call(e,n(7))},function(t,e,n){(function(e){t.exports=e.swal=n(10)}).call(e,n(7))},function(t,e,n){"undefined"!=typeof window&&n(11),n(16);var o=n(23).default;t.exports=o},function(t,e,n){var o=n(12);"string"==typeof o&&(o=[[t.i,o,""]]);var r={insertAt:"top"};r.transform=void 0;n(14)(o,r);o.locals&&(t.exports=o.locals)},function(t,e,n){e=t.exports=n(13)(void 0),e.push([t.i,'.swal-icon--error{border-color:#f27474;-webkit-animation:animateErrorIcon .5s;animation:animateErrorIcon .5s}.swal-icon--error__x-mark{position:relative;display:block;-webkit-animation:animateXMark .5s;animation:animateXMark .5s}.swal-icon--error__line{position:absolute;height:5px;width:47px;background-color:#f27474;display:block;top:37px;border-radius:2px}.swal-icon--error__line--left{-webkit-transform:rotate(45deg);transform:rotate(45deg);left:17px}.swal-icon--error__line--right{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);right:16px}@-webkit-keyframes animateErrorIcon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}to{-webkit-transform:rotateX(0deg);transform:rotateX(0deg);opacity:1}}@keyframes animateErrorIcon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}to{-webkit-transform:rotateX(0deg);transform:rotateX(0deg);opacity:1}}@-webkit-keyframes animateXMark{0%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}50%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}80%{-webkit-transform:scale(1.15);transform:scale(1.15);margin-top:-6px}to{-webkit-transform:scale(1);transform:scale(1);margin-top:0;opacity:1}}@keyframes animateXMark{0%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}50%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}80%{-webkit-transform:scale(1.15);transform:scale(1.15);margin-top:-6px}to{-webkit-transform:scale(1);transform:scale(1);margin-top:0;opacity:1}}.swal-icon--warning{border-color:#f8bb86;-webkit-animation:pulseWarning .75s infinite alternate;animation:pulseWarning .75s infinite alternate}.swal-icon--warning__body{width:5px;height:47px;top:10px;border-radius:2px;margin-left:-2px}.swal-icon--warning__body,.swal-icon--warning__dot{position:absolute;left:50%;background-color:#f8bb86}.swal-icon--warning__dot{width:7px;height:7px;border-radius:50%;margin-left:-4px;bottom:-11px}@-webkit-keyframes pulseWarning{0%{border-color:#f8d486}to{border-color:#f8bb86}}@keyframes pulseWarning{0%{border-color:#f8d486}to{border-color:#f8bb86}}.swal-icon--success{border-color:#a5dc86}.swal-icon--success:after,.swal-icon--success:before{content:"";border-radius:50%;position:absolute;width:60px;height:120px;background:#fff;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.swal-icon--success:before{border-radius:120px 0 0 120px;top:-7px;left:-33px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:60px 60px;transform-origin:60px 60px}.swal-icon--success:after{border-radius:0 120px 120px 0;top:-11px;left:30px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:0 60px;transform-origin:0 60px;-webkit-animation:rotatePlaceholder 4.25s ease-in;animation:rotatePlaceholder 4.25s ease-in}.swal-icon--success__ring{width:80px;height:80px;border:4px solid hsla(98,55%,69%,.2);border-radius:50%;box-sizing:content-box;position:absolute;left:-4px;top:-4px;z-index:2}.swal-icon--success__hide-corners{width:5px;height:90px;background-color:#fff;padding:1px;position:absolute;left:28px;top:8px;z-index:1;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.swal-icon--success__line{height:5px;background-color:#a5dc86;display:block;border-radius:2px;position:absolute;z-index:2}.swal-icon--success__line--tip{width:25px;left:14px;top:46px;-webkit-transform:rotate(45deg);transform:rotate(45deg);-webkit-animation:animateSuccessTip .75s;animation:animateSuccessTip .75s}.swal-icon--success__line--long{width:47px;right:8px;top:38px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-animation:animateSuccessLong .75s;animation:animateSuccessLong .75s}@-webkit-keyframes rotatePlaceholder{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}to{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@keyframes rotatePlaceholder{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}to{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@-webkit-keyframes animateSuccessTip{0%{width:0;left:1px;top:19px}54%{width:0;left:1px;top:19px}70%{width:50px;left:-8px;top:37px}84%{width:17px;left:21px;top:48px}to{width:25px;left:14px;top:45px}}@keyframes animateSuccessTip{0%{width:0;left:1px;top:19px}54%{width:0;left:1px;top:19px}70%{width:50px;left:-8px;top:37px}84%{width:17px;left:21px;top:48px}to{width:25px;left:14px;top:45px}}@-webkit-keyframes animateSuccessLong{0%{width:0;right:46px;top:54px}65%{width:0;right:46px;top:54px}84%{width:55px;right:0;top:35px}to{width:47px;right:8px;top:38px}}@keyframes animateSuccessLong{0%{width:0;right:46px;top:54px}65%{width:0;right:46px;top:54px}84%{width:55px;right:0;top:35px}to{width:47px;right:8px;top:38px}}.swal-icon--info{border-color:#c9dae1}.swal-icon--info:before{width:5px;height:29px;bottom:17px;border-radius:2px;margin-left:-2px}.swal-icon--info:after,.swal-icon--info:before{content:"";position:absolute;left:50%;background-color:#c9dae1}.swal-icon--info:after{width:7px;height:7px;border-radius:50%;margin-left:-3px;top:19px}.swal-icon{width:80px;height:80px;border-width:4px;border-style:solid;border-radius:50%;padding:0;position:relative;box-sizing:content-box;margin:20px auto}.swal-icon:first-child{margin-top:32px}.swal-icon--custom{width:auto;height:auto;max-width:100%;border:none;border-radius:0}.swal-icon img{max-width:100%;max-height:100%}.swal-title{color:rgba(0,0,0,.65);font-weight:600;text-transform:none;position:relative;display:block;padding:13px 16px;font-size:27px;line-height:normal;text-align:center;margin-bottom:0}.swal-title:first-child{margin-top:26px}.swal-title:not(:first-child){padding-bottom:0}.swal-title:not(:last-child){margin-bottom:13px}.swal-text{font-size:16px;position:relative;float:none;line-height:normal;vertical-align:top;text-align:left;display:inline-block;margin:0;padding:0 10px;font-weight:400;color:rgba(0,0,0,.64);max-width:calc(100% - 20px);overflow-wrap:break-word;box-sizing:border-box}.swal-text:first-child{margin-top:45px}.swal-text:last-child{margin-bottom:45px}.swal-footer{text-align:right;padding-top:13px;margin-top:13px;padding:13px 16px;border-radius:inherit;border-top-left-radius:0;border-top-right-radius:0}.swal-button-container{margin:5px;display:inline-block;position:relative}.swal-button{background-color:#7cd1f9;color:#fff;border:none;box-shadow:none;border-radius:5px;font-weight:600;font-size:14px;padding:10px 24px;margin:0;cursor:pointer}.swal-button[not:disabled]:hover{background-color:#78cbf2}.swal-button:active{background-color:#70bce0}.swal-button:focus{outline:none;box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(43,114,165,.29)}.swal-button[disabled]{opacity:.5;cursor:default}.swal-button::-moz-focus-inner{border:0}.swal-button--cancel{color:#555;background-color:#efefef}.swal-button--cancel[not:disabled]:hover{background-color:#e8e8e8}.swal-button--cancel:active{background-color:#d7d7d7}.swal-button--cancel:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(116,136,150,.29)}.swal-button--danger{background-color:#e64942}.swal-button--danger[not:disabled]:hover{background-color:#df4740}.swal-button--danger:active{background-color:#cf423b}.swal-button--danger:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(165,43,43,.29)}.swal-content{padding:0 20px;margin-top:20px;font-size:medium}.swal-content:last-child{margin-bottom:20px}.swal-content__input,.swal-content__textarea{-webkit-appearance:none;background-color:#fff;border:none;font-size:14px;display:block;box-sizing:border-box;width:100%;border:1px solid rgba(0,0,0,.14);padding:10px 13px;border-radius:2px;transition:border-color .2s}.swal-content__input:focus,.swal-content__textarea:focus{outline:none;border-color:#6db8ff}.swal-content__textarea{resize:vertical}.swal-button--loading{color:transparent}.swal-button--loading~.swal-button__loader{opacity:1}.swal-button__loader{position:absolute;height:auto;width:43px;z-index:2;left:50%;top:50%;-webkit-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);text-align:center;pointer-events:none;opacity:0}.swal-button__loader div{display:inline-block;float:none;vertical-align:baseline;width:9px;height:9px;padding:0;border:none;margin:2px;opacity:.4;border-radius:7px;background-color:hsla(0,0%,100%,.9);transition:background .2s;-webkit-animation:swal-loading-anim 1s infinite;animation:swal-loading-anim 1s infinite}.swal-button__loader div:nth-child(3n+2){-webkit-animation-delay:.15s;animation-delay:.15s}.swal-button__loader div:nth-child(3n+3){-webkit-animation-delay:.3s;animation-delay:.3s}@-webkit-keyframes swal-loading-anim{0%{opacity:.4}20%{opacity:.4}50%{opacity:1}to{opacity:.4}}@keyframes swal-loading-anim{0%{opacity:.4}20%{opacity:.4}50%{opacity:1}to{opacity:.4}}.swal-overlay{position:fixed;top:0;bottom:0;left:0;right:0;text-align:center;font-size:0;overflow-y:auto;background-color:rgba(0,0,0,.4);z-index:10000;pointer-events:none;opacity:0;transition:opacity .3s}.swal-overlay:before{content:" ";display:inline-block;vertical-align:middle;height:100%}.swal-overlay--show-modal{opacity:1;pointer-events:auto}.swal-overlay--show-modal .swal-modal{opacity:1;pointer-events:auto;box-sizing:border-box;-webkit-animation:showSweetAlert .3s;animation:showSweetAlert .3s;will-change:transform}.swal-modal{width:478px;opacity:0;pointer-events:none;background-color:#fff;text-align:center;border-radius:5px;position:static;margin:20px auto;display:inline-block;vertical-align:middle;-webkit-transform:scale(1);transform:scale(1);-webkit-transform-origin:50% 50%;transform-origin:50% 50%;z-index:10001;transition:opacity .2s,-webkit-transform .3s;transition:transform .3s,opacity .2s;transition:transform .3s,opacity .2s,-webkit-transform .3s}@media (max-width:500px){.swal-modal{width:calc(100% - 20px)}}@-webkit-keyframes showSweetAlert{0%{-webkit-transform:scale(1);transform:scale(1)}1%{-webkit-transform:scale(.5);transform:scale(.5)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes showSweetAlert{0%{-webkit-transform:scale(1);transform:scale(1)}1%{-webkit-transform:scale(.5);transform:scale(.5)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}to{-webkit-transform:scale(1);transform:scale(1)}}',""])},function(t,e){function n(t,e){var n=t[1]||"",r=t[3];if(!r)return n;if(e&&"function"==typeof btoa){var i=o(r);return[n].concat(r.sources.map(function(t){return"/*# sourceURL="+r.sourceRoot+t+" */"})).concat([i]).join("\n")}return[n].join("\n")}function o(t){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(t))))+" */"}t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var o=n(e,t);return e[2]?"@media "+e[2]+"{"+o+"}":o}).join("")},e.i=function(t,n){"string"==typeof t&&(t=[[null,t,""]]);for(var o={},r=0;r<this.length;r++){var i=this[r][0];"number"==typeof i&&(o[i]=!0)}for(r=0;r<t.length;r++){var a=t[r];"number"==typeof a[0]&&o[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),e.push(a))}},e}},function(t,e,n){function o(t,e){for(var n=0;n<t.length;n++){var o=t[n],r=m[o.id];if(r){r.refs++;for(var i=0;i<r.parts.length;i++)r.parts[i](o.parts[i]);for(;i<o.parts.length;i++)r.parts.push(u(o.parts[i],e))}else{for(var a=[],i=0;i<o.parts.length;i++)a.push(u(o.parts[i],e));m[o.id]={id:o.id,refs:1,parts:a}}}}function r(t,e){for(var n=[],o={},r=0;r<t.length;r++){var i=t[r],a=e.base?i[0]+e.base:i[0],s=i[1],c=i[2],l=i[3],u={css:s,media:c,sourceMap:l};o[a]?o[a].parts.push(u):n.push(o[a]={id:a,parts:[u]})}return n}function i(t,e){var n=v(t.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var o=w[w.length-1];if("top"===t.insertAt)o?o.nextSibling?n.insertBefore(e,o.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),w.push(e);else{if("bottom"!==t.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");n.appendChild(e)}}function a(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=w.indexOf(t);e>=0&&w.splice(e,1)}function s(t){var e=document.createElement("style");return t.attrs.type="text/css",l(e,t.attrs),i(t,e),e}function c(t){var e=document.createElement("link");return t.attrs.type="text/css",t.attrs.rel="stylesheet",l(e,t.attrs),i(t,e),e}function l(t,e){Object.keys(e).forEach(function(n){t.setAttribute(n,e[n])})}function u(t,e){var n,o,r,i;if(e.transform&&t.css){if(!(i=e.transform(t.css)))return function(){};t.css=i}if(e.singleton){var l=h++;n=g||(g=s(e)),o=f.bind(null,n,l,!1),r=f.bind(null,n,l,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=c(e),o=p.bind(null,n,e),r=function(){a(n),n.href&&URL.revokeObjectURL(n.href)}):(n=s(e),o=d.bind(null,n),r=function(){a(n)});return o(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;o(t=e)}else r()}}function f(t,e,n,o){var r=n?"":o.css;if(t.styleSheet)t.styleSheet.cssText=x(e,r);else{var i=document.createTextNode(r),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}function d(t,e){var n=e.css,o=e.media;if(o&&t.setAttribute("media",o),t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}function p(t,e,n){var o=n.css,r=n.sourceMap,i=void 0===e.convertToAbsoluteUrls&&r;(e.convertToAbsoluteUrls||i)&&(o=y(o)),r&&(o+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var a=new Blob([o],{type:"text/css"}),s=t.href;t.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}var m={},b=function(t){var e;return function(){return void 0===e&&(e=t.apply(this,arguments)),e}}(function(){return window&&document&&document.all&&!window.atob}),v=function(t){var e={};return function(n){return void 0===e[n]&&(e[n]=t.call(this,n)),e[n]}}(function(t){return document.querySelector(t)}),g=null,h=0,w=[],y=n(15);t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");e=e||{},e.attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||(e.singleton=b()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var n=r(t,e);return o(n,e),function(t){for(var i=[],a=0;a<n.length;a++){var s=n[a],c=m[s.id];c.refs--,i.push(c)}if(t){o(r(t,e),e)}for(var a=0;a<i.length;a++){var c=i[a];if(0===c.refs){for(var l=0;l<c.parts.length;l++)c.parts[l]();delete m[c.id]}}}};var x=function(){var t=[];return function(e,n){return t[e]=n,t.filter(Boolean).join("\n")}}()},function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var n=e.protocol+"//"+e.host,o=n+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(t,e){var r=e.trim().replace(/^"(.*)"$/,function(t,e){return e}).replace(/^'(.*)'$/,function(t,e){return e});if(/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(r))return t;var i;return i=0===r.indexOf("//")?r:0===r.indexOf("/")?n+r:o+r.replace(/^\.\//,""),"url("+JSON.stringify(i)+")"})}},function(t,e,n){var o=n(17);"undefined"==typeof window||window.Promise||(window.Promise=o),n(21),String.prototype.includes||(String.prototype.includes=function(t,e){"use strict";return"number"!=typeof e&&(e=0),!(e+t.length>this.length)&&-1!==this.indexOf(t,e)}),Array.prototype.includes||Object.defineProperty(Array.prototype,"includes",{value:function(t,e){if(null==this)throw new TypeError('"this" is null or not defined');var n=Object(this),o=n.length>>>0;if(0===o)return!1;for(var r=0|e,i=Math.max(r>=0?r:o-Math.abs(r),0);i<o;){if(function(t,e){return t===e||"number"==typeof t&&"number"==typeof e&&isNaN(t)&&isNaN(e)}(n[i],t))return!0;i++}return!1}}),"undefined"!=typeof window&&function(t){t.forEach(function(t){t.hasOwnProperty("remove")||Object.defineProperty(t,"remove",{configurable:!0,enumerable:!0,writable:!0,value:function(){this.parentNode.removeChild(this)}})})}([Element.prototype,CharacterData.prototype,DocumentType.prototype])},function(t,e,n){(function(e){!function(n){function o(){}function r(t,e){return function(){t.apply(e,arguments)}}function i(t){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");if("function"!=typeof t)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],f(t,this)}function a(t,e){for(;3===t._state;)t=t._value;if(0===t._state)return void t._deferreds.push(e);t._handled=!0,i._immediateFn(function(){var n=1===t._state?e.onFulfilled:e.onRejected;if(null===n)return void(1===t._state?s:c)(e.promise,t._value);var o;try{o=n(t._value)}catch(t){return void c(e.promise,t)}s(e.promise,o)})}function s(t,e){try{if(e===t)throw new TypeError("A promise cannot be resolved with itself.");if(e&&("object"==typeof e||"function"==typeof e)){var n=e.then;if(e instanceof i)return t._state=3,t._value=e,void l(t);if("function"==typeof n)return void f(r(n,e),t)}t._state=1,t._value=e,l(t)}catch(e){c(t,e)}}function c(t,e){t._state=2,t._value=e,l(t)}function l(t){2===t._state&&0===t._deferreds.length&&i._immediateFn(function(){t._handled||i._unhandledRejectionFn(t._value)});for(var e=0,n=t._deferreds.length;e<n;e++)a(t,t._deferreds[e]);t._deferreds=null}function u(t,e,n){this.onFulfilled="function"==typeof t?t:null,this.onRejected="function"==typeof e?e:null,this.promise=n}function f(t,e){var n=!1;try{t(function(t){n||(n=!0,s(e,t))},function(t){n||(n=!0,c(e,t))})}catch(t){if(n)return;n=!0,c(e,t)}}var d=setTimeout;i.prototype.catch=function(t){return this.then(null,t)},i.prototype.then=function(t,e){var n=new this.constructor(o);return a(this,new u(t,e,n)),n},i.all=function(t){var e=Array.prototype.slice.call(t);return new i(function(t,n){function o(i,a){try{if(a&&("object"==typeof a||"function"==typeof a)){var s=a.then;if("function"==typeof s)return void s.call(a,function(t){o(i,t)},n)}e[i]=a,0==--r&&t(e)}catch(t){n(t)}}if(0===e.length)return t([]);for(var r=e.length,i=0;i<e.length;i++)o(i,e[i])})},i.resolve=function(t){return t&&"object"==typeof t&&t.constructor===i?t:new i(function(e){e(t)})},i.reject=function(t){return new i(function(e,n){n(t)})},i.race=function(t){return new i(function(e,n){for(var o=0,r=t.length;o<r;o++)t[o].then(e,n)})},i._immediateFn="function"==typeof e&&function(t){e(t)}||function(t){d(t,0)},i._unhandledRejectionFn=function(t){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",t)},i._setImmediateFn=function(t){i._immediateFn=t},i._setUnhandledRejectionFn=function(t){i._unhandledRejectionFn=t},void 0!==t&&t.exports?t.exports=i:n.Promise||(n.Promise=i)}(this)}).call(e,n(18).setImmediate)},function(t,e,n){function o(t,e){this._id=t,this._clearFn=e}var r=Function.prototype.apply;e.setTimeout=function(){return new o(r.call(setTimeout,window,arguments),clearTimeout)},e.setInterval=function(){return new o(r.call(setInterval,window,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(window,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout(function(){t._onTimeout&&t._onTimeout()},e))},n(19),e.setImmediate=setImmediate,e.clearImmediate=clearImmediate},function(t,e,n){(function(t,e){!function(t,n){"use strict";function o(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var o={callback:t,args:e};return l[c]=o,s(c),c++}function r(t){delete l[t]}function i(t){var e=t.callback,o=t.args;switch(o.length){case 0:e();break;case 1:e(o[0]);break;case 2:e(o[0],o[1]);break;case 3:e(o[0],o[1],o[2]);break;default:e.apply(n,o)}}function a(t){if(u)setTimeout(a,0,t);else{var e=l[t];if(e){u=!0;try{i(e)}finally{r(t),u=!1}}}}if(!t.setImmediate){var s,c=1,l={},u=!1,f=t.document,d=Object.getPrototypeOf&&Object.getPrototypeOf(t);d=d&&d.setTimeout?d:t,"[object process]"==={}.toString.call(t.process)?function(){s=function(t){e.nextTick(function(){a(t)})}}():function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=n,e}}()?function(){var e="setImmediate$"+Math.random()+"$",n=function(n){n.source===t&&"string"==typeof n.data&&0===n.data.indexOf(e)&&a(+n.data.slice(e.length))};t.addEventListener?t.addEventListener("message",n,!1):t.attachEvent("onmessage",n),s=function(n){t.postMessage(e+n,"*")}}():t.MessageChannel?function(){var t=new MessageChannel;t.port1.onmessage=function(t){a(t.data)},s=function(e){t.port2.postMessage(e)}}():f&&"onreadystatechange"in f.createElement("script")?function(){var t=f.documentElement;s=function(e){var n=f.createElement("script");n.onreadystatechange=function(){a(e),n.onreadystatechange=null,t.removeChild(n),n=null},t.appendChild(n)}}():function(){s=function(t){setTimeout(a,0,t)}}(),d.setImmediate=o,d.clearImmediate=r}}("undefined"==typeof self?void 0===t?this:t:self)}).call(e,n(7),n(20))},function(t,e){function n(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function r(t){if(u===setTimeout)return setTimeout(t,0);if((u===n||!u)&&setTimeout)return u=setTimeout,setTimeout(t,0);try{return u(t,0)}catch(e){try{return u.call(null,t,0)}catch(e){return u.call(this,t,0)}}}function i(t){if(f===clearTimeout)return clearTimeout(t);if((f===o||!f)&&clearTimeout)return f=clearTimeout,clearTimeout(t);try{return f(t)}catch(e){try{return f.call(null,t)}catch(e){return f.call(this,t)}}}function a(){b&&p&&(b=!1,p.length?m=p.concat(m):v=-1,m.length&&s())}function s(){if(!b){var t=r(a);b=!0;for(var e=m.length;e;){for(p=m,m=[];++v<e;)p&&p[v].run();v=-1,e=m.length}p=null,b=!1,i(t)}}function c(t,e){this.fun=t,this.array=e}function l(){}var u,f,d=t.exports={};!function(){try{u="function"==typeof setTimeout?setTimeout:n}catch(t){u=n}try{f="function"==typeof clearTimeout?clearTimeout:o}catch(t){f=o}}();var p,m=[],b=!1,v=-1;d.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];m.push(new c(t,e)),1!==m.length||b||r(s)},c.prototype.run=function(){this.fun.apply(null,this.array)},d.title="browser",d.browser=!0,d.env={},d.argv=[],d.version="",d.versions={},d.on=l,d.addListener=l,d.once=l,d.off=l,d.removeListener=l,d.removeAllListeners=l,d.emit=l,d.prependListener=l,d.prependOnceListener=l,d.listeners=function(t){return[]},d.binding=function(t){throw new Error("process.binding is not supported")},d.cwd=function(){return"/"},d.chdir=function(t){throw new Error("process.chdir is not supported")},d.umask=function(){return 0}},function(t,e,n){"use strict";n(22).polyfill()},function(t,e,n){"use strict";function o(t,e){if(void 0===t||null===t)throw new TypeError("Cannot convert first argument to object");for(var n=Object(t),o=1;o<arguments.length;o++){var r=arguments[o];if(void 0!==r&&null!==r)for(var i=Object.keys(Object(r)),a=0,s=i.length;a<s;a++){var c=i[a],l=Object.getOwnPropertyDescriptor(r,c);void 0!==l&&l.enumerable&&(n[c]=r[c])}}return n}function r(){Object.assign||Object.defineProperty(Object,"assign",{enumerable:!1,configurable:!0,writable:!0,value:o})}t.exports={assign:o,polyfill:r}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(24),r=n(6),i=n(5),a=n(36),s=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if("undefined"!=typeof window){var n=a.getOpts.apply(void 0,t);return new Promise(function(t,e){i.default.promise={resolve:t,reject:e},o.default(n),setTimeout(function(){r.openModal()})})}};s.close=r.onAction,s.getState=r.getState,s.setActionValue=i.setActionValue,s.stopLoading=r.stopLoading,s.setDefaults=a.setDefaults,e.default=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(0),i=r.default.MODAL,a=n(4),s=n(34),c=n(35),l=n(1);e.init=function(t){o.getNode(i)||(document.body||l.throwErr("You can only use SweetAlert AFTER the DOM has loaded!"),s.default(),a.default()),a.initModalContent(t),c.default(t)},e.default=e.init},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.MODAL;e.modalMarkup='\n  <div class="'+r+'" role="dialog" aria-modal="true"></div>',e.default=e.modalMarkup},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.OVERLAY,i='<div \n    class="'+r+'"\n    tabIndex="-1">\n  </div>';e.default=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.ICON;e.errorIconMarkup=function(){var t=r+"--error",e=t+"__line";return'\n    <div class="'+t+'__x-mark">\n      <span class="'+e+" "+e+'--left"></span>\n      <span class="'+e+" "+e+'--right"></span>\n    </div>\n  '},e.warningIconMarkup=function(){var t=r+"--warning";return'\n    <span class="'+t+'__body">\n      <span class="'+t+'__dot"></span>\n    </span>\n  '},e.successIconMarkup=function(){var t=r+"--success";return'\n    <span class="'+t+"__line "+t+'__line--long"></span>\n    <span class="'+t+"__line "+t+'__line--tip"></span>\n\n    <div class="'+t+'__ring"></div>\n    <div class="'+t+'__hide-corners"></div>\n  '}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.CONTENT;e.contentMarkup='\n  <div class="'+r+'">\n\n  </div>\n'},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.BUTTON_CONTAINER,i=o.default.BUTTON,a=o.default.BUTTON_LOADER;e.buttonMarkup='\n  <div class="'+r+'">\n\n    <button\n      class="'+i+'"\n    ></button>\n\n    <div class="'+a+'">\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n\n  </div>\n'},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(4),r=n(2),i=n(0),a=i.default.ICON,s=i.default.ICON_CUSTOM,c=["error","warning","success","info"],l={error:r.errorIconMarkup(),warning:r.warningIconMarkup(),success:r.successIconMarkup()},u=function(t,e){var n=a+"--"+t;e.classList.add(n);var o=l[t];o&&(e.innerHTML=o)},f=function(t,e){e.classList.add(s);var n=document.createElement("img");n.src=t,e.appendChild(n)},d=function(t){if(t){var e=o.injectElIntoModal(r.iconMarkup);c.includes(t)?u(t,e):f(t,e)}};e.default=d},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(2),r=n(4),i=function(t){navigator.userAgent.includes("AppleWebKit")&&(t.style.display="none",t.offsetHeight,t.style.display="")};e.initTitle=function(t){if(t){var e=r.injectElIntoModal(o.titleMarkup);e.textContent=t,i(e)}},e.initText=function(t){if(t){var e=document.createDocumentFragment();t.split("\n").forEach(function(t,n,o){e.appendChild(document.createTextNode(t)),n<o.length-1&&e.appendChild(document.createElement("br"))});var n=r.injectElIntoModal(o.textMarkup);n.appendChild(e),i(n)}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(4),i=n(0),a=i.default.BUTTON,s=i.default.DANGER_BUTTON,c=n(3),l=n(2),u=n(6),f=n(5),d=function(t,e,n){var r=e.text,i=e.value,d=e.className,p=e.closeModal,m=o.stringToNode(l.buttonMarkup),b=m.querySelector("."+a),v=a+"--"+t;if(b.classList.add(v),d){(Array.isArray(d)?d:d.split(" ")).filter(function(t){return t.length>0}).forEach(function(t){b.classList.add(t)})}n&&t===c.CONFIRM_KEY&&b.classList.add(s),b.textContent=r;var g={};return g[t]=i,f.setActionValue(g),f.setActionOptionsFor(t,{closeModal:p}),b.addEventListener("click",function(){return u.onAction(t)}),m},p=function(t,e){var n=r.injectElIntoModal(l.footerMarkup);for(var o in t){var i=t[o],a=d(o,i,e);i.visible&&n.appendChild(a)}0===n.children.length&&n.remove()};e.default=p},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(3),r=n(4),i=n(2),a=n(5),s=n(6),c=n(0),l=c.default.CONTENT,u=function(t){t.addEventListener("input",function(t){var e=t.target,n=e.value;a.setActionValue(n)}),t.addEventListener("keyup",function(t){if("Enter"===t.key)return s.onAction(o.CONFIRM_KEY)}),setTimeout(function(){t.focus(),a.setActionValue("")},0)},f=function(t,e,n){var o=document.createElement(e),r=l+"__"+e;o.classList.add(r);for(var i in n){var a=n[i];o[i]=a}"input"===e&&u(o),t.appendChild(o)},d=function(t){if(t){var e=r.injectElIntoModal(i.contentMarkup),n=t.element,o=t.attributes;"string"==typeof n?f(e,n,o):e.appendChild(n)}};e.default=d},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(2),i=function(){var t=o.stringToNode(r.overlayMarkup);document.body.appendChild(t)};e.default=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(5),r=n(6),i=n(1),a=n(3),s=n(0),c=s.default.MODAL,l=s.default.BUTTON,u=s.default.OVERLAY,f=function(t){t.preventDefault(),v()},d=function(t){t.preventDefault(),g()},p=function(t){if(o.default.isOpen)switch(t.key){case"Escape":return r.onAction(a.CANCEL_KEY)}},m=function(t){if(o.default.isOpen)switch(t.key){case"Tab":return f(t)}},b=function(t){if(o.default.isOpen)return"Tab"===t.key&&t.shiftKey?d(t):void 0},v=function(){var t=i.getNode(l);t&&(t.tabIndex=0,t.focus())},g=function(){var t=i.getNode(c),e=t.querySelectorAll("."+l),n=e.length-1,o=e[n];o&&o.focus()},h=function(t){t[t.length-1].addEventListener("keydown",m)},w=function(t){t[0].addEventListener("keydown",b)},y=function(){var t=i.getNode(c),e=t.querySelectorAll("."+l);e.length&&(h(e),w(e))},x=function(t){if(i.getNode(u)===t.target)return r.onAction(a.CANCEL_KEY)},_=function(t){var e=i.getNode(u);e.removeEventListener("click",x),t&&e.addEventListener("click",x)},k=function(t){o.default.timer&&clearTimeout(o.default.timer),t&&(o.default.timer=window.setTimeout(function(){return r.onAction(a.CANCEL_KEY)},t))},O=function(t){t.closeOnEsc?document.addEventListener("keyup",p):document.removeEventListener("keyup",p),t.dangerMode?v():g(),y(),_(t.closeOnClickOutside),k(t.timer)};e.default=O},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(3),i=n(37),a=n(38),s={title:null,text:null,icon:null,buttons:r.defaultButtonList,content:null,className:null,closeOnClickOutside:!0,closeOnEsc:!0,dangerMode:!1,timer:null},c=Object.assign({},s);e.setDefaults=function(t){c=Object.assign({},s,t)};var l=function(t){var e=t&&t.button,n=t&&t.buttons;return void 0!==e&&void 0!==n&&o.throwErr("Cannot set both 'button' and 'buttons' options!"),void 0!==e?{confirm:e}:n},u=function(t){return o.ordinalSuffixOf(t+1)},f=function(t,e){o.throwErr(u(e)+" argument ('"+t+"') is invalid")},d=function(t,e){var n=t+1,r=e[n];o.isPlainObject(r)||void 0===r||o.throwErr("Expected "+u(n)+" argument ('"+r+"') to be a plain object")},p=function(t,e){var n=t+1,r=e[n];void 0!==r&&o.throwErr("Unexpected "+u(n)+" argument ("+r+")")},m=function(t,e,n,r){var i=typeof e,a="string"===i,s=e instanceof Element;if(a){if(0===n)return{text:e};if(1===n)return{text:e,title:r[0]};if(2===n)return d(n,r),{icon:e};f(e,n)}else{if(s&&0===n)return d(n,r),{content:e};if(o.isPlainObject(e))return p(n,r),e;f(e,n)}};e.getOpts=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n={};t.forEach(function(e,o){var r=m(0,e,o,t);Object.assign(n,r)});var o=l(n);n.buttons=r.getButtonListOpts(o),delete n.button,n.content=i.getContentOpts(n.content);var u=Object.assign({},s,c,n);return Object.keys(u).forEach(function(t){a.DEPRECATED_OPTS[t]&&a.logDeprecation(t)}),u}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r={element:"input",attributes:{placeholder:""}};e.getContentOpts=function(t){var e={};return o.isPlainObject(t)?Object.assign(e,t):t instanceof Element?{element:t}:"input"===t?r:null}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.logDeprecation=function(t){var n=e.DEPRECATED_OPTS[t],o=n.onlyRename,r=n.replacement,i=n.subOption,a=n.link,s=o?"renamed":"deprecated",c='SweetAlert warning: "'+t+'" option has been '+s+".";if(r){c+=" Please use"+(i?' "'+i+'" in ':" ")+'"'+r+'" instead.'}var l="https://sweetalert.js.org";c+=a?" More details: "+l+a:" More details: "+l+"/guides/#upgrading-from-1x",console.warn(c)},e.DEPRECATED_OPTS={type:{replacement:"icon",link:"/docs/#icon"},imageUrl:{replacement:"icon",link:"/docs/#icon"},customClass:{replacement:"className",onlyRename:!0,link:"/docs/#classname"},imageSize:{},showCancelButton:{replacement:"buttons",link:"/docs/#buttons"},showConfirmButton:{replacement:"button",link:"/docs/#button"},confirmButtonText:{replacement:"button",link:"/docs/#button"},confirmButtonColor:{},cancelButtonText:{replacement:"buttons",link:"/docs/#buttons"},closeOnConfirm:{replacement:"button",subOption:"closeModal",link:"/docs/#button"},closeOnCancel:{replacement:"buttons",subOption:"closeModal",link:"/docs/#buttons"},showLoaderOnConfirm:{replacement:"buttons"},animation:{},inputType:{replacement:"content",link:"/docs/#content"},inputValue:{replacement:"content",link:"/docs/#content"},inputPlaceholder:{replacement:"content",link:"/docs/#content"},html:{replacement:"content",link:"/docs/#content"},allowEscapeKey:{replacement:"closeOnEsc",onlyRename:!0,link:"/docs/#closeonesc"},allowClickOutside:{replacement:"closeOnClickOutside",onlyRename:!0,link:"/docs/#closeonclickoutside"}}}])});
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).setImmediate, __webpack_require__(6).clearImmediate))

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = {
  showModelMsg,
  hideModelMsg,
  resetModels,
  clearCheckedModel,
  filterModels,
  getModels
};

let userGlobal = __webpack_require__(0);
let userColors = __webpack_require__(2); 
let userPreview = __webpack_require__(3); 
let swal = __webpack_require__(4);
let scroll = __webpack_require__(1);

// global variables
let hm = 'hm-black-light';

  /* color option css */
  $('.model-option').on('click',function(event) {
    event.preventDefault();
    // console.log('model option has class: ', $(this).find('i').hasClass('fa-check') );

    if( !userGlobal.tallaSelected ){
      swal({
        title: "Ups",
        text: 'Primero seleccione una talla.', //res.errorMsg
        icon: "error"
      });
      return;
    }
    
    userColors.clearCheckedColor();

    if( $(this).hasClass('model-checked') ){
      $(this).find('i').removeClass('fa-check');
      $(this).removeClass('model-checked');
      $(this).removeClass(hm);

      userColors.resetColors();
    } else {
      resetModels(hm);

      $(this).find('i').addClass('fa-check');
      $(this).addClass('model-checked');
      $(this).addClass(hm);
      scroll.smoothScrollTo('section', '_colors');
    }

    let modelChecked = $('.model-checked');
    modelChecked = $(modelChecked[0]).data();
    if(modelChecked){
      userGlobal.modelChecked = modelChecked;
      userColors.renderFilteredColors(modelChecked);
      userPreview.hidePreview();
      userPreview.showPreviewMsg('* Seleccione un color');
    } else {
      // no model selected, let the user know, he needs to select one model first
      userGlobal.modelChecked = undefined;
      $('#color-container-message').find('p').text('Seleccione un modelo');
      $('#color-container-message').removeClass('d-none');
      userPreview.hidePreview();
      userPreview.showPreviewMsg('* Seleccione un modelo<br>Seleccione un color');
    }

  });

  function filterModels() {
    /* get al de .model-options elemnt in the DOM */
    let modelOptions = $('.model-option');
    let modelsAvlb = []; // models abailable
    
    /* get de array of models available for selected size in userGlobal.catFiltered // [1,2,12] */
    modelsAvlb = getModels(); 
    console.log('modelsAvlb ', modelsAvlb);
    

    /*  loop through .model-option elements get the data(cardModelId) and if it exists
        in modelsAvlb show it else hide it */
    for( let i = 0; i < modelOptions.length ; i++ ){
      let model = $(modelOptions[i]);
      let modelImgIsSet = false;
      // console.log('model', model);
      
      // console.log(`model.code init ####################  ${model.data('cardModelCode')}`);
      // console.log('userGlobal.catFiltered', userGlobal.catFiltered);
      
      // if(userGlobal.catFiltered){
        let modelDetail = userGlobal.catFiltered.filter(function(mod) {
          return mod.model == model.data('cardModelId');
        })[0];
      // }

        // if( modelDetail ){ modelDetail = modelDetail[0]; }

        if($.inArray( $(model).data('cardModelId'), modelsAvlb ) == -1){ 
          /* if cardModelId is not in modelsAvlb hide it */
          $(model).addClass('d-none'); 
        } else { 
          /* if cardModelId is in modelsAvlb show it and filter summaryColorsOpt*/
          let summaryColorsOpt = model.find('div.summary-color-option');
          $(model).removeClass('d-none');
          let modelDetail = userGlobal.catFiltered.filter( function(mod) { return mod.model == model.data('cardModelId'); })[0];
          // console.log('modelDetail', modelDetail);
          // console.log('userGlobal', userGlobal.catFiltered);
          for (let j = 0; j < summaryColorsOpt.length; j++) {
            let miniColor = $(summaryColorsOpt[j]);
            // console.log('miniColor', miniColor);
            // console.log('miniColor.id', miniColor.data('summaryColorId'));
            // console.log('modelDetail.colors', modelDetail.colors);
            // console.log('miniColor.id is in modelDetail.colors', $.inArray( miniColor.data('summaryColorId'), modelDetail.colors ));
            if( $.inArray( String(miniColor.data('summaryColorId')), modelDetail.colors ) !== -1 ){
              miniColor.removeClass('d-none');

              if(!modelImgIsSet){
                let url ='material/cat_model/';
                url += model.data('cardModelCode').toLowerCase();
                url += '-';
                url += miniColor.data('summaryColorCode').toLowerCase();
                url += '.jpg';
                // model.find('img.img-model-option').attr('src', 'material/cat_model/ldy-red.jpg');
                model.find('img.img-model-option').attr('src', url);
                modelImgIsSet = true;
              }
            } else {
              miniColor.addClass('d-none');
            }
          }
        }

    }

  }

  function hideModelCards() {
    $('#models-container-cards').addClass('d-none');
  }
  function showModelCards() {
    $('#models-container-cards').removeClass('d-none');
  }

  function showModelMsg(msg) {
    $('#models-container-message').find('p').removeClass('d-none');
    $('#models-container-message').find('p').text(msg);
  }

  function hideModelMsg() {
    $('#models-container-message').find('p').addClass('d-none');
    $('#models-container-message').find('p').text('Message goes here');
  }

  function resetModels() {
    // $('.color-option>.view>.mask>i').removeClass('fa-check');
    userGlobal.modelChecked = undefined;
    $('.model-option').find('i').removeClass('fa-check');
    $('.model-option').removeClass('model-checked');
    $('.model-option').removeClass(hm);
  }
  
  function clearCheckedModel() {
    userGlobal.modelChecked = undefined;
    $('.model-option').find('i').removeClass('fa-check');
    $('.model-option').removeClass('model-checked');
    $('.model-option').removeClass(hm);
  }

  function getModels() { 
    // returns array of the models' id available for that size
    // [1,2,3,4]
    let arrModelsId = [];
    if(userGlobal.catFiltered){
      userGlobal.catFiltered.forEach(function(modelObj) {
        arrModelsId.push( parseInt(modelObj.model) );
      });
    }
    return arrModelsId;
  }




/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(10);
// On some exotic environments, it's not clear which object `setimmeidate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ }),
/* 7 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = {
  addItemToCard,
  revomeItemFromCard,
};



let userColors = __webpack_require__(2);
let userPreview = __webpack_require__(3);
let userGlobal = __webpack_require__(0);
// let swal =  require('sweetalert');


$(document).on("click", ".user-pedido-trash", function(){
  let itemToDelete = $(this);
  revomeItemFromCard(itemToDelete);
});


function addItemToCard() {
  console.log('############### item added');
  let carritoTableItems = $('#user_carrito_table_items');
  
  // dynamic value
  let pedidoId = $('.user-pedido-item').length + 1; // gets the length

  // this are objects with different values
  let pedidoModelo = $('.model-checked');
  let pedidoColor = $('.color-checked');
  let pedidoTalla = $('#user_talla option:selected');

  // this are direct values
  let pedidoCantidadPares = $('#user_prev_pares').val();
  let pedidoSubtotal = $('#user_prev_subtotal').text();
  let pedidoImg = $('#user_prev_img').attr('src');

  let previewModel = userGlobal.modelChecked;
  let previewColor = userGlobal.colorChecked;
  let modelSelected = userGlobal.catFiltered.filter(function(mod) {
    return mod.model == previewModel.cardModelId;
  })[0];
  let pedidoPrecioUnitario = modelSelected.precios[modelSelected.colors.indexOf( String(previewColor.colorId) )];

  console.log('pedidoId', pedidoId);
  console.log('pedidoModelo', pedidoModelo.data() );
  console.log('pedidoColor', pedidoColor.data() );
  console.log('pedidoTalla', pedidoTalla.data() );
  console.log('pedidoCantidadPares', pedidoCantidadPares);
  console.log('pedidoPrecioUnitario', pedidoPrecioUnitario);
  console.log('pedidoSubtotal', pedidoSubtotal);
  console.log('pedidoImg', pedidoImg);  

  let newItemTemp = `<tr class='align-items-center user-pedido-item' 
                      data-pedido-id='${pedidoId}' 
                      data-pedido-modelo-id='${pedidoModelo.data('cardModelId')}' 
                      data-pedido-color-id='${pedidoColor.data('colorId')}' 
                      data-pedido-talla-id='${pedidoTalla.val()}'
                      data-pedido-cantidad-pares='${pedidoCantidadPares}'
                      data-pedido-subtotal='${pedidoSubtotal}'
                      data-pedido-precio-unitario='${pedidoPrecioUnitario}'
                      >
                      <td class='p-0'> 
                        <div class='view mx-auto' style='width: 120px;'>
                          <img src='${pedidoImg}' class='img-fluid mx-auto' alt='Img ${pedidoModelo.data('cardModelCode')} ${pedidoColor.data('colorCode')}'>
                        </div>  
                      </td>
                      <td class='d-block'>${pedidoModelo.data('cardModelName')}</td>
                      <td>${pedidoColor.data('colorName')}</td>
                      <td>${pedidoTalla.text()}</td>
                      <td class='text-center'>${pedidoCantidadPares}</td>
                      <td class='text-center'>${pedidoSubtotal}</td>
                      <td class='text-center px-0 pt-0'> 
                        <button type='button' class='user-pedido-trash btn btn-danger waves-effect waves-light p-2 user-pedido-trash'>
                          <i class='fa fa-trash-o white-text'></i>
                        </button>
                      </td>
                    </tr>`;
  carritoTableItems.append( $(newItemTemp) );
  userPreview.hidePreview(); 
  calcTotal();
} // .addItemToCard()


function revomeItemFromCard(element) {
  // console.log('###### item canceled'); console.log('element ', element.parents('tr'));
  element.parents('tr.user-pedido-item').remove();
  orderPedidosId();
  calcTotal();
}

function orderPedidosId() {
  // map items if one is deleted to reset ID's
  let pedidos = $('.user-pedido-item');
  console.log('user pedidos', pedidos);

  // for (let i = 0; i < pedidos.length; i++) {
  //   let pedido = $(pedidos[i]);
  //   pedido.attr( 'data-pedido-id', i + 1 );
  //   // console.log('$pedido', pedido); console.log('updated userPedido', pedido.data('pedidoId'));
  // }

  pedidos.each(function(i, pedido){
    $(pedido).attr( 'data-pedido-id', i + 1 );
  });

  console.log('user pedidos edited', pedidos);
}


function calcTotal() {
  let pedidos = $('.user-pedido-item');
  let paresTotales = 0;
  let pagoTotal = 0.00;

  pedidos.each(function(i, pedido){
    paresTotales += parseInt( $(pedido).data('pedidoCantidadPares') );
    pagoTotal += parseFloat( $(pedido).data('pedidoSubtotal') );
  });
  
  updateNavbarSummary(pedidos.length);
  $('#user_carrito_pares_totales').text(paresTotales);
  $('#user_carrito_total').text(pagoTotal.toFixed(2));
}

function updateNavbarSummary(items) {
  // let pedidos = $('.user-pedido-item');
  $('#user_navbar_summary_pedidos').text(items);
}

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_sweetalert__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_sweetalert___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_sweetalert__);
// libraries


// pages
__webpack_require__(12);
__webpack_require__(1);

// admin
__webpack_require__(13);
__webpack_require__(14);


// user
__webpack_require__(0); // refers to global variables
__webpack_require__(15);
__webpack_require__(16);
__webpack_require__(2);
__webpack_require__(17);
__webpack_require__(5);
__webpack_require__(3);
__webpack_require__(8);
__webpack_require__(18);

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6â8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(11)))

/***/ }),
/* 11 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 12 */
/***/ (function(module, exports) {


$(document).ready(function() {


    /* login form */
    $('#submitLogin').click(function(event) {
      event.preventDefault();
      console.log('loginClicked');

      let user = $('#userAcc').val();
      let pass = $('#userPass').val();

      let message;

      console.log('user: ', user);
      console.log('pass: ', pass);
      let request = $.ajax(
        {
          url: 'ajax/pages_ajax.php',
          type: 'GET',
          data: {
            action: 'login',
            user: user,
            pass: pass
          }
        }
      );
      
      request.done(function(data) {
        message = 'success';
        let userInfo = $.parseJSON(data);
        console.log('my success data: ', userInfo);

        switch (userInfo.userPermiso) {
          case '1': case '2':
            window.open('?controller=admin&action=index', '_self');
            break;
          case '3':
            window.open('?controller=user&action=index', '_self');
            break;
        
          default:
            window.open('?controller=pages&action=error', '_self');
            break;
        }
        
      });

      request.fail(function() {
        message = 'fail';
        window.open('?controller=pages&action=error', '_self');
      });

      request.always(function() {
        console.log('ajax message: ', message);
      });
    });


});

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

let swal = __webpack_require__(4);
// $(document).ready(function() {

  
    /* addNewUser form */
    $('#btnAddNewUser').click(function(event) {
      event.preventDefault();
      // console.log('addUserClicked');

      let acc     = $('#addNewUser_acc').val().toLowerCase();
      let name    = $('#addNewUser_name').val().toLowerCase().replace(/\b\w/g, function(l){ return l.toUpperCase() });
      let embId   = $('#addNewUser_embId').val();
      let pass    = $('#addNewUser_pass').val();
      let priv    = $('#addNewUser_priv').val();
      let picUrl  = $('#addNewUser_picUrl').val();
      // let picUrl  = ($('#addNewUser_picUrl').val()) ? $('#addNewUser_picUrl').val() : false ;

      let message;

      if( acc && name && (embId != 0) && pass && (priv != 0)) {

      } else {
        swal({
          title: "Ups...",
          text: "Falta llenar algunos datos",
          icon: "error",
        });
        return;
      }

      // console.log('acc: ', acc);
      // console.log('name: ', name );
      // console.log('embId: ', embId);
      // console.log('pass: ', pass);
      // console.log('priv: ', priv);
      // console.log('picUrl: ', picUrl);

      
      let request = $.ajax(
        {
          url: 'ajax/admin_ajax.php',
          type: 'GET',
          data: {
            action: 'addNewUser',
            acc: acc,
            name: name,
            embId: embId,
            pass: pass,
            priv: priv,
            picUrl: picUrl,
          }
        }
      );
      
      request.done(function(data) {
        message = 'success';
        let resp = $.parseJSON(data); // response
        $('#addNewUser_acc').val('');
        $('#addNewUser_name').val('');
        $('#addNewUser_embId').val(0);
        $('#addNewUser_pass').val('');
        $('#addNewUser_priv').val(0);
        $('#addNewUser_picUrl').val('');

        // console.log('In success > type ofresp: ',typeof resp);
        // console.log('In success > resp: ', resp);

        if( !resp.error ){
          if( resp.exists ){
            // ya existe user
            swal({
              title: "Â¡Lo sentimos!",
              text: resp.errorMsg,
              icon: "error",
            });
          } else {
            // succes se agrego
            swal({
              title: "Â¡Listo!",
              text: resp.successMsg,
              icon: "success",
            });
          }
        } else {
          // if data = success
          swal({
            title: "Â¡Lo sentimos!",
            text: resp.errorMsg,
            icon: "error",
          });
        }

      });

      request.fail(function() {
        message = 'fail';
        // window.open('?controller=pages&action=error', '_self');
      });

      request.always(function() {
        // console.log('ajax message: ', message);
      });

    });




    /* addNewUSer cancel */
    $('#btnAddNewUserCancel').click(function(event) {
      event.preventDefault();

      swal({
        title: "Â¿Deseas cancelar?",
        text: "Se borraran los datos en pantalla",
        icon: "warning",
        buttons: true,
        dangerMode: true,
      })
      .then((willDelete) => {
        if (willDelete) {
          $('#addNewUser_acc').val('');
          $('#addNewUser_name').val('');
          $('#addNewUser_embId').val(0);
          $('#addNewUser_pass').val('');
          $('#addNewUser_priv').val(0);
          $('#addNewUser_picUrl').val('');
        }
      });
    });


    /* Ajax load */
    
    $(this).ajaxStart(function () {
      // $loading.show();
      $('#addNewUser_loader').removeClass('hide');
      console.log(' --- ajax Started --- ');
    })
    $(this).ajaxStop(function () {
      $('#addNewUser_loader').addClass('hide');
      console.log(' --- ajax ended --- ');
    });


// });

/***/ }),
/* 14 */
/***/ (function(module, exports) {

    
$(document).ready(function() {
  
  let touchtime = 0;

  /* addNewUser form */
  $('.order-row').click(function(event) {
    event.preventDefault();
    // console.log('email data: ', $(this).data('email')) ;
    console.log('select options: ', $('#pedido_detalle_estatus > option') );
    $('#pedido_detalle_estatus > option').each(function(opt){
      // opt.attr('disabled');
      console.log('option: ', opt );
      
    })
    if (touchtime == 0) {
      // set first click
      touchtime = new Date().getTime();
    } else {
      // compare first click to this click and see if they occurred within double click threshold
      if (((new Date().getTime()) - touchtime) < 500) {
        console.log('order.data: ', $(this).data()) ;
        let order = $(this).data();
        $('#pedido_detalle_nombre')   .text(order.nombre);
        $('#pedido_detalle_email')    .text(order.email);
        $('#pedido_detalle_numOrden') .text(order.numOrden);
        $('#pedido_detalle_fecha')    .text(order.fecha);
        $('#pedido_detalle_estatus')  .val(order.estatus);
        $('#pedido_detalle_title')    .text( order.numOrden + ' - ' + order.nombre);


        $('#pedido_detalle_estatus > option').each(function(){
          if( $(this).val() < order.estatus ){
            $(this).attr('disabled', 'disabled');
            console.log('option: ', this);
          }
        });
    
        $('#modal-order-detail').modal('show');
        touchtime = 0;
        } else {
            // not a double click so set as a new first click
            touchtime = new Date().getTime();
        }
    }
    
  });

  $('#testBtn').click(function() {
    console.log('clicked for the win');
    console.log('val: ', $('#pedido_detalle_test').text());

    $('#pedido_detalle_test').text('win');
  });


  /* Ajax load */
  
  $(this).ajaxStart(function () {
    // $loading.show();
    $('#addNewUser_loader').removeClass('hide');
    // console.log(' --- ajax Started --- ');
  })
  $(this).ajaxStop(function () {
    $('#addNewUser_loader').addClass('hide');
    // console.log(' --- ajax ended --- ');
  });


});

/***/ }),
/* 15 */
/***/ (function(module, exports) {



/***/ }),
/* 16 */
/***/ (function(module, exports) {



/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

let userGlobal = __webpack_require__(0);
let userColors = __webpack_require__(2);  
let userModels = __webpack_require__(5);  
let userPreview = __webpack_require__(3);
let scroll = __webpack_require__(1);

// $(document).ready(function() {

  /* talla option */
  $('#user_talla').change(function(event) {
    event.preventDefault();
    // if user_Talla slicer or select option changes
    // console.log('Value changed');

    // clean checked models
    $('.model-option').find('i').removeClass('fa-check');
    $('.model-option').removeClass('model-checked');
    $('.model-option').removeClass('hm-black-light');

    // clean checked color
    $('.color-option').find('i').removeClass('fa-check');
    $('.color-option').removeClass('color-checked');

    
    console.log( `talla[${$('#user_talla option:selected').text()}] value: ${$(this).val()}` );

    let talla = $('#user_talla').val();
    userGlobal.tallaSelected = talla;

    let request = $.ajax(
      {
        url: 'ajax/user_ajax.php',
        type: 'GET',
        data: {
          action: 'getAvailableShoes',
          talla: talla
        }
      }
    );
    
    request.done(function(data) {
      message = 'success';
      // console.log('userTalla.data => ', data);
      let res = $.parseJSON(data); // response
      let cat = [];
      // console.log('request.done => ', res);

      if( res.error ){
        swal({
          title: "Â¡Lo sentimos!",
          text: 'No se accedio al catalogo correctamente', //res.errorMsg
          icon: "error"
        });
      } else {
        /** Data structure
         * [ 
         *   { 
         *     model: 1, 
         *     colors: [1,2,3], 
         *     precios: [100,100,150] 
         *   }, 
         *   { 
         *     model: 2, 
         *     colors: [1,3,4], 
         *     precios: [100,100,100] 
         *   } 
         * ] 
         */
        
        res.result.map(function(row) {
          let modelHasBeenAdded = false;
          let modelArrIndex;
          cat.forEach((option, index) => { // option
            if( option.model == row.YSC_ModeloId ){ 
              modelArrIndex = index;
              modelHasBeenAdded = true; 
            }
          })
          if( modelHasBeenAdded ){
            cat[modelArrIndex].colors.push(row.YSC_ColorId);
            cat[modelArrIndex].precios.push(row.YSC_Precio);
          } else {
            cat.push({
              model: row.YSC_ModeloId,
              colors: [row.YSC_ColorId],
              precios: [row.YSC_Precio]
            });
          }
          modelHasBeenAdded = false;
        });
        // console.log('cat: ', cat);
      }

      // userGlobal.modelsFiltered = cat;
      if(cat.length > 0){
        userGlobal.catFiltered = cat;
        userModels.hideModelMsg();
      } else {
        userGlobal.catFiltered = [];
        userModels.showModelMsg('No se encontro ningun modelo.');
        
      }

      userModels.filterModels();
      unsetModelChecked();
      userColors.resetColors();
      userPreview.hidePreview();
      userPreview.showPreviewMsg('* Seleccione un modelo <br>* Seleccione un color');
      scroll.smoothScrollTo('section','_models')
    });

    request.fail(function() {
      message = 'fail';
      // window.open('?controller=pages&action=error', '_self');
    });

    request.always(function() {
      console.log('ajax message: ', message);
    });
    

  });

  

  function getColors(modelObj) {
    // returns array of colors' id available for that model
    // [1,2,3,4]
    return modelObj.colors;
    // let arrColorsId = [];
    // modelsObjArr.forEach(function(color) {
    //   arrColorsId.push( parseInt(modelAvlb.color) );
    // });
    // return arrColorsId;
  }

  function unsetModelChecked() {
    userGlobal.modelChecked = undefined;
  }



  // With JQuery
  // $('#user_tallaSlider').slider({
  //   formatter: function(value) {
  //     return 'Talla: ' + (value+10);
  //   }
  // });

  // Without JQuery
  // var slider = new Slider('#user_tallaSlider', {
  //   formatter: function(value) {
  //     return 'Current value: ' + value;
  //   }
  // });

// }); // /document

/***/ }),
/* 18 */
/***/ (function(module, exports) {


$('#user_place_order_email').click(function(event) {
  event.preventDefault();

  let username = $('#user_info_name').val();    // Ricardo Lara
  let useremail = $('#user_info_email').val();  // alejandro.elara@live.com

  // validate email >> if email == valid
  
  if( useremail.length < 5 && useremail.length < 5){
    swal({
      title: "Ups",
      text: 'Ingrese su correo, nombre y apellido', // res.errorMsg
      icon: "error"
    });
  } else {
    // build order
    let dt = new Date();
    let date = dt.getFullYear().toString().substr(-2);   
    date += ('0' + (dt.getMonth()+1).toString()).slice(-2); // January is 0, February is 1, and so on. + 1
    date += ('0' + dt.getDate().toString()).slice(-2);

    //'1-180222-001' = embId(get it in php) - 2018 Feb 22 - consecutivo(este ultimo se inyecta en php)
    let dataPedido = {
      numeroOrden: date,
      nombre: username,
      email: useremail,
      cantidadPares: 0,
      total: 0.0,
      detail: []
    };

    // detalExample = [
    //   {
    //     modelo: 2,
    //     talla: 1,
    //     color: 2,
    //     precioUnitario: 150,
    //     cantidad: 2
    //   },
    //   {
    //     modelo: 1,
    //     talla: 2,
    //     color: 1,
    //     precioUnitario: 100.5,
    //     cantidad: 1
    //   }
    // ];

    let pedidosItems = $('.user-pedido-item');
    for (let i = 0; i < pedidosItems.length; i++) {
      let pedidoItem = $(pedidosItems[i]).data();
      dataPedido.cantidadPares += parseInt(pedidoItem.pedidoCantidadPares);
      dataPedido.total += parseFloat(pedidoItem.pedidoPrecioUnitario) * parseInt(pedidoItem.pedidoCantidadPares);


      dataPedido.detail.push({
        modelo: pedidoItem.pedidoModeloId,
        talla: pedidoItem.pedidoTallaId ,
        color: pedidoItem.pedidoColorId ,
        precioUnitario: pedidoItem.pedidoPrecioUnitario ,
        cantidad: pedidoItem.pedidoCantidadPares,
        subtotal: pedidoItem.pedidoSubtotal
      });
      // console.log(pedidoItem);
    }
    // console.log('total $:', dataPedido.total);
    // console.log('total n:', dataPedido.cantidadPares);


    // console.log('dataPedido:', dataPedido);
    console.log('dataPedido to json:', JSON.stringify(dataPedido));
    /** 
     * elements to add in server side 
     *  - pedidoFecha
     *  - pedidoEstatus
     *  - pedidoEmbajadorId
     *  - confirmado
     */
    $('#user_place_order_email').find('i').removeClass('fa-paper-plane-o').addClass('fa-refresh fa-spin');
    // ajax call to get email
    let request = $.ajax(
      {
        type: 'GET',
        url: 'ajax/email_ajax_server.php', // for the server
        // url: 'ajax/email_ajax.php', // for local
        data: {
          action: 'placeOrder',
          dataPedido: JSON.stringify(dataPedido)
        }
      }
    );
    
    request.done(function(data) {
      message = 'success';
      let resp = $.parseJSON(data); // response
      console.log('###### resp ', resp);

      if(!resp.error){
        swal({
          title: 'Â¡Listo!',
          text: resp.successMsg,
          icon: "success"
        }).then(() => {
          window.open(`?controller=user&action=comprobante&numOrden=${resp.numOrden}&nombre=${resp.nombre}&email=${resp.email}&numOrden=${resp.numOrden}&cantidadPares=${resp.cantidadPares}&total=${resp.total}&embPointer=${resp.embPointer}&detail=${JSON.stringify(resp.detail)}`
          , '_self');
        });

      } else {
        swal({
          title: 'Ups',
          text: resp.errorMsg,
          icon: 'error'
        });
      }
      
    });
  
    request.fail(function() {
      message = 'fail';
      // window.open('?controller=pages&action=error', '_self');
    });
  
    request.always(function() {
      console.log('ajax email status: ', message);
      $('#user_place_order_email').find('i').removeClass('fa-refresh fa-spin').addClass('fa-paper-plane-o');
      // console.log('end of email ajax call');
    });
  }


});


$('#user_comprobante_btn').click(function() {
  // let newWin =  new windoe($('#user_comprobante'));
  window.print();
  // var divToPrint=document.getElementById('user_comprobante');

  // var newWin = window.open('','Print-Window');

  // newWin.document.open();

  // newWin.document.write('<html><body onload="window.print()">'+divToPrint.innerHTML+'</body></html>');

  // newWin.document.close();

  // setTimeout(function(){newWin.close();},10);
});

/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,